{"version":3,"sources":["components/common/FormControls/FormControls.jsx","components/common/FormControls/FormControls.module.css","utils/validators/validators.js","components/hoc/WithAuthRedirect.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["FormControlElement","Element","input","meta","props","hasError","touched","error","className","styles","formControl","module","exports","validators","required","value","undefined","mustBeNumber","isNaN","minValue","min","composeValidators","reduce","validator","maxLength","length","mapStateToProps","state","isAuth","auth","WithAuthRedirect","Component","RedirectComponent","this","to","React","connect","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","_s","_i","next","done","push","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","status","setStatus","useState","editMode","setEditMode","currStatus","setCurrStatus","useEffect","autoFocus","onBlur","onChange","e","currentTarget","type","onDoubleClick","ProfileDataForm","profile","leaveEditMode","saveProfile","Input","TextArea","onSubmit","values","a","initialValues","handleSubmit","submitting","pristine","form","htmlFor","name","component","placeholder","keys","contacts","map","key","contact","disabled","ProfileData","isOwner","goToEditMode","onClick","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","Preloader","descriptionBlock","profileImage","src","photos","large","alt","fullName","target","files","Post","item","text","MyPosts","memo","postsElements","profilePage","posts","post","id","likesCount","postsBlock","addPost","FormAddPost","validate","reset","MyPostsContainer","dispatch","postText","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","setProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/4.a64f9563.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './FormControls.module.css';\r\n\r\nexport const FormControlElement = Element => ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <Element {...input} {...props}/>\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3XuoQ\",\"error\":\"FormControls_error__3PNN-\",\"formSummaryError\":\"FormControls_formSummaryError__3JmAt\"};","export const validators = {\r\n    required: value => (value ? undefined : 'Required'),\r\n    mustBeNumber: value => (isNaN(value) ? 'Must be a number' : undefined),\r\n    minValue: min => value =>\r\n        isNaN(value) || value >= min ? undefined : `Should be greater than ${min}`,\r\n    composeValidators: (...validators) => value =>\r\n        validators.reduce((error, validator) => error || validator(value), undefined),\r\n    maxLength: maxLength => {\r\n        return (value) => {\r\n            if (!value || value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n            render() {\r\n                if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n                return (\r\n                    <Component {...this.props} />\r\n                )\r\n            }\r\n    }\r\n    return connect(mapStateToProps)(RedirectComponent);\r\n}\r\n\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__22Sai\",\"contact\":\"ProfileInfo_contact__3fTwF\",\"img\":\"ProfileInfo_img__2GteD\",\"profileImage\":\"ProfileInfo_profileImage__3mNnU\",\"fullName\":\"ProfileInfo_fullName__XtuhM\",\"aboutMe\":\"ProfileInfo_aboutMe__F1Xp1\",\"status\":\"ProfileInfo_status__3dVGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__2Jy64\",\"posts\":\"MyPosts_posts__10Uxl\",\"postsBlock\":\"MyPosts_postsBlock__1AZC5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1LtHM\"};","import React from \"react\";\r\nimport styles from \"./ProfileInfo/ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = ({status, setStatus}) => {\r\n    const [editMode, setEditMode] = React.useState(false);\r\n    const [currStatus, setCurrStatus] = React.useState(status);\r\n\r\n    React.useEffect( () => {\r\n        setCurrStatus(status);\r\n    }, [status]);\r\n\r\n    const activatedEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deActivatedEditMode = () => {\r\n        setEditMode(false);\r\n        setStatus(currStatus);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setCurrStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !editMode\r\n                    ? <div\r\n                        onDoubleClick={activatedEditMode}\r\n                        className={styles.status}>\r\n                        {currStatus}\r\n                    </div>\r\n                    : <input\r\n                        autoFocus='true'\r\n                        onBlur={deActivatedEditMode}\r\n                        onChange={onStatusChange}\r\n                        type='text'\r\n                        value={currStatus}\r\n                    />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport {Form, Field} from 'react-final-form';\r\nimport {FormControlElement} from \"../../common/FormControls/FormControls\";\r\nimport styles from './ProfileInfo.module.css';\r\n\r\nconst ProfileDataForm = ({profile, leaveEditMode, saveProfile}) => {\r\n\r\n    const Input = FormControlElement('input');\r\n    const TextArea = FormControlElement('textarea');\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={async values => {\r\n                await saveProfile(values);\r\n                leaveEditMode();\r\n            }}\r\n            initialValues={profile}\r\n        >\r\n            {({handleSubmit, pristine, form, submitting}) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <label htmlFor={'fullName'}>\r\n                            <b>Full Name:</b>\r\n                            <Field\r\n                                name={'fullName'}\r\n                                component={Input}\r\n                                type={'text'}\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor={'lookingForAJob'}>\r\n                            <b>Looking for a job:</b>\r\n                            <Field\r\n                                name={'lookingForAJob'}\r\n                                component={Input}\r\n                                type={'checkbox'}\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor={'lookingForAJobDescription'}>\r\n                            <b>Looking for a job description:</b>\r\n                            <Field name={'lookingForAJobDescription'}\r\n                                   component={TextArea}\r\n                                   placeholder={'Type something here..'}\r\n                            />\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label htmlFor={'aboutMe'}>\r\n                            <b>About me:</b>\r\n                            <Field name={'aboutMe'}\r\n                                   component={TextArea}\r\n                                   placeholder={'Type something here..'}\r\n                            />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                         return <div key={key} className={styles.contact}>\r\n                                     <b>{key}</b>:\r\n                                     <Field\r\n                                        name={'contacts.' + key}\r\n                                        component={Input}\r\n                                        type={'text'}\r\n                                        placeholder={'Enter contact..'}\r\n                                     />\r\n                                </div>\r\n                    })}\r\n                    </div>\r\n\r\n\r\n                    <div>\r\n                        <button type={'submit'} disabled={submitting}>\r\n                            Save changes\r\n                        </button>\r\n                        {/*<button*/}\r\n                        {/*    type=\"button\"*/}\r\n                        {/*    disabled={pristine || submitting}*/}\r\n                        {/*    onClick={form.reset}*/}\r\n                        {/*>*/}\r\n                        {/*    Clear Values*/}\r\n                        {/*</button>*/}\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default ProfileDataForm;","import React from 'react';\r\nimport styles from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"../ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, setStatus, isOwner, savePhoto, saveProfile}) => {\r\n    const [editMode, setEditMode] = React.useState(false);\r\n\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = e => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.descriptionBlock}>\r\n                <img className={styles.profileImage}\r\n                     src={profile.photos.large ||\r\n                     'https://image.freepik.com/free-vector/illustration-of-a-stylish-young-man-avatar-of-a-man-for-profile_15870-706.jpg'}\r\n                     alt=\"Avatar\"\r\n                />\r\n                <div className={styles.fullName}>{profile.fullName}</div>\r\n                <div className={styles.aboutMe}>{profile.aboutMe || 'Empty'}</div>\r\n                {isOwner && <input type={'file'} onChange={onMainPhotoSelected}/>}\r\n\r\n                {\r\n                    editMode\r\n                    ? <ProfileDataForm profile={profile} saveProfile={saveProfile} leaveEditMode={() => setEditMode(false)}/>\r\n                        : <ProfileData profile={profile} isOwner={isOwner} goToEditMode={() => setEditMode(true)}/>\r\n                }\r\n\r\n                <ProfileStatusWithHooks\r\n                    status={status}\r\n                    setStatus={setStatus}\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                isOwner && <button onClick={goToEditMode}>Edit</button>\r\n            }\r\n            <div>\r\n                <b>Looking for a job:</b> {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n\r\n            <div>\r\n                <b>About me:</b> {profile.aboutMe}\r\n            </div>\r\n\r\n            <div>\r\n                <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return (\r\n        <div className={styles.contact}>\r\n            <b>{contactTitle}</b>:{contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport styles from \"./Post.module.css\";\r\n\r\nfunction Post(props) {\r\n    return (\r\n        <div>\r\n            <div className={styles.item}>\r\n                <img\r\n                    src=\"https://st2.depositphotos.com/3079665/6151/v/600/depositphotos_61516793-stock-illustration-panda-standing.jpg\" alt=\"avatar\"/>\r\n                {props.text}\r\n            </div>\r\n            <div>\r\n                <span>like</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport styles from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, Form} from 'react-final-form';\r\nimport {validators} from \"../../../utils/validators/validators\";\r\nimport {FormControlElement} from \"../../common/FormControls/FormControls\";\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let state = props.profilePage;\r\n    const postsElements = state.posts.map(post => {\r\n        return <Post\r\n            key={post.id}\r\n            id={post.id}\r\n            text={post.text}\r\n            likesCount={post.likesCount}/>\r\n    })\r\n    const addPost = (value) => {\r\n        props.addPost(value);\r\n    }\r\n    return (\r\n        <div className={styles.postsBlock}>\r\n            <h3> My Posts </h3>\r\n            <FormAddPost addPost={addPost}/>\r\n            <div className={styles.posts}>{postsElements}</div>\r\n        </div>\r\n    );\r\n})\r\n\r\nconst FormAddPost = props => {\r\n    const TextArea = FormControlElement('textarea');\r\n    return (\r\n        <Form\r\n            onSubmit={values => {\r\n                props.addPost(values.post)\r\n            }}\r\n            validate={() => {\r\n\r\n            }}\r\n        >\r\n            {({handleSubmit, pristine, form, submitting}) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <div>\r\n                        <Field name={'post'}\r\n                               component={TextArea}\r\n                               placeholder={'Enter post text..'}\r\n                               validate={validators.maxLength(50)}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <div>\r\n                            <button type=\"submit\"\r\n                                    disabled={submitting}\r\n                            > Add post\r\n                            </button>\r\n                            <button type=\"button\"\r\n                                    disabled={pristine || submitting}\r\n                                    onClick={form.reset}\r\n                            > Clear\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (postText) => {\r\n            dispatch(addPostActionCreator(postText))\r\n        },\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nfunction Profile(props) {\r\n    return (\r\n        <div>\r\n            <ProfileInfo {...props}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {getStatus, savePhoto, saveProfile, setProfile, setStatus} from \"../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {WithAuthRedirect} from \"../hoc/WithAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n\r\n        this.props.setProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile\r\n                {...this.props}\r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile}\r\n                savePhoto={this.props.savePhoto}\r\n                saveProfile={this.props.saveProfile}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        status: state.profilePage.status,\r\n        profile: state.profilePage.profile,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setProfile, getStatus, setStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}