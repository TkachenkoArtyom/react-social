{"version":3,"sources":["components/common/FormControls/FormControls.jsx","components/common/FormControls/FormControls.module.css","utils/validators/validators.js","components/Login/Login.jsx"],"names":["FormControlElement","Element","input","meta","props","hasError","touched","error","className","styles","formControl","module","exports","validators","required","value","undefined","mustBeNumber","isNaN","minValue","min","composeValidators","reduce","validator","maxLength","length","connect","state","captchaUrl","auth","isAuth","login","Input","to","onSubmit","values","console","log","email","password","rememberMe","captcha","handleSubmit","pristine","form","submitting","name","component","type","validate","placeholder","show","formSummaryError","message","src","alt","disabled","onClick","reset"],"mappings":"uLAGaA,EAAqB,SAAAC,GAAO,OAAI,YAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCAChEC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACI,sBAAKC,UAAWC,IAAOC,YAAc,KAAOL,EAAWI,IAAOF,MAAQ,IAAtE,UACI,8BACI,cAACN,EAAD,2BAAaC,GAAWE,MAE5B,8BACKC,GAAY,+BAAOF,EAAKI,gB,mBCVzCI,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,gCCDzH,kCAAO,IAAMC,EAAa,CACtBC,SAAU,SAAAC,GAAK,OAAKA,OAAQC,EAAY,YACxCC,aAAc,SAAAF,GAAK,OAAKG,MAAMH,GAAS,wBAAqBC,GAC5DG,SAAU,SAAAC,GAAG,OAAI,SAAAL,GAAK,OAClBG,MAAMH,IAAUA,GAASK,OAAMJ,EAA/B,iCAAqEI,KACzEC,kBAAmB,sCAAIR,EAAJ,yBAAIA,EAAJ,uBAAmB,SAAAE,GAAK,OACvCF,EAAWS,QAAO,SAACf,EAAOgB,GAAR,OAAsBhB,GAASgB,EAAUR,UAAQC,KACvEQ,UAAW,SAAAA,GACP,OAAO,SAACT,GACJ,IAAKA,GAASA,EAAMU,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,gB,gCCTpD,uFA8FeE,uBARS,SAACC,GACrB,MAAO,CACHC,WAAYD,EAAME,KAAKD,WACvBE,OAAQH,EAAME,KAAKC,OACnBvB,MAAOoB,EAAME,KAAKtB,SAIc,CAACwB,WAA1BL,EArFD,SAAC,GAAyC,IAAvCI,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,MAAOxB,EAAuB,EAAvBA,MAAOqB,EAAgB,EAAhBA,WAC7BI,EAAQhC,YAAmB,SAEjC,OAAe,IAAX8B,EACO,cAAC,IAAD,CAAUG,GAAI,aAIrB,cAAC,IAAD,CACIC,SAAU,SAAAC,GACNC,QAAQC,IAAIF,GACZJ,EAAMI,EAAOG,MAAOH,EAAOI,SAAUJ,EAAOK,WAAYL,EAAOM,UAHvE,SAMK,gBAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,SAAUC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,WAAhC,OACG,uBAAMX,SAAUQ,EAAhB,UACI,uCACA,8BACI,cAAC,IAAD,CACII,KAAK,QACLC,UAAWf,EACXgB,KAAK,OACLC,SAAUpC,IAAWW,UAAU,IAC/B0B,YAAY,YAGpB,8BACI,cAAC,IAAD,CACIJ,KAAK,WACLC,UAAWf,EACXgB,KAAK,WACLC,SAAUpC,IAAWW,UAAU,IAC/B0B,YAAY,eAGpB,8BACI,cAAC,IAAD,CACIJ,KAAK,aACLC,UAAW,QACXC,KAAK,WACLC,SAAUpC,IAAWW,UAAU,QAGtCjB,EAAM4C,MAAQ,qBAAK3C,UAAWC,IAAO2C,iBAAvB,SACV7C,EAAM8C,UAIPzB,GAAc,gCACV,qBAAK0B,IAAK1B,EAAY2B,IAAI,YAC1B,cAAC,IAAD,CACIT,KAAM,UACNC,UAAWf,EACXkB,YAAa,uBACbD,SAAUpC,IAAWC,cAKjC,gCACI,wBAAQkC,KAAK,SAASQ,SAAUX,EAAhC,oBAGA,wBACIG,KAAK,SACLQ,SAAUb,GAAYE,EACtBY,QAASb,EAAKc,MAHlB","file":"static/js/7.c69442ad.chunk.js","sourcesContent":["import React from 'react';\r\nimport styles from './FormControls.module.css';\r\n\r\nexport const FormControlElement = Element => ({input, meta, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <Element {...input} {...props}/>\r\n            </div>\r\n            <div>\r\n                {hasError && <span>{meta.error}</span>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__3XuoQ\",\"error\":\"FormControls_error__3PNN-\",\"formSummaryError\":\"FormControls_formSummaryError__3JmAt\"};","export const validators = {\r\n    required: value => (value ? undefined : 'Required'),\r\n    mustBeNumber: value => (isNaN(value) ? 'Must be a number' : undefined),\r\n    minValue: min => value =>\r\n        isNaN(value) || value >= min ? undefined : `Should be greater than ${min}`,\r\n    composeValidators: (...validators) => value =>\r\n        validators.reduce((error, validator) => error || validator(value), undefined),\r\n    maxLength: maxLength => {\r\n        return (value) => {\r\n            if (!value || value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n            return undefined;\r\n        }\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Form, Field} from 'react-final-form';\r\nimport {FormControlElement} from \"../common/FormControls/FormControls\";\r\nimport {validators} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport styles from './../common/FormControls/FormControls.module.css';\r\n\r\nconst Login = ({ isAuth, login, error, captchaUrl}) => {\r\n    const Input = FormControlElement('input');\r\n\r\n    if (isAuth === true) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return (\r\n        <Form\r\n            onSubmit={values => {\r\n                console.log(values)\r\n                login(values.email, values.password, values.rememberMe, values.captcha);\r\n            }}\r\n        >\r\n            {({handleSubmit, pristine, form, submitting}) => (\r\n                <form onSubmit={handleSubmit}>\r\n                    <h2>Login</h2>\r\n                    <div>\r\n                        <Field\r\n                            name=\"email\"\r\n                            component={Input}\r\n                            type=\"text\"\r\n                            validate={validators.maxLength(20)}\r\n                            placeholder=\"email\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <Field\r\n                            name=\"password\"\r\n                            component={Input}\r\n                            type=\"password\"\r\n                            validate={validators.maxLength(20)}\r\n                            placeholder=\"password\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <Field\r\n                            name=\"rememberMe\"\r\n                            component={'input'}\r\n                            type=\"checkbox\"\r\n                            validate={validators.maxLength(20)}\r\n                        />\r\n                    </div>\r\n                    {error.show && <div className={styles.formSummaryError}>\r\n                        {error.message}\r\n                    </div>}\r\n\r\n                    {\r\n                        captchaUrl && <div>\r\n                            <img src={captchaUrl} alt=\"Captcha\"/>\r\n                            <Field\r\n                                name={'captcha'}\r\n                                component={Input}\r\n                                placeholder={'Enter captcha here..'}\r\n                                validate={validators.required}\r\n                            />\r\n                        </div>\r\n                    }\r\n\r\n                    <div>\r\n                        <button type=\"submit\" disabled={submitting}>\r\n                            Submit\r\n                        </button>\r\n                        <button\r\n                            type=\"button\"\r\n                            disabled={pristine || submitting}\r\n                            onClick={form.reset}\r\n                        >\r\n                            Clear Values\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            )}\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        captchaUrl: state.auth.captchaUrl,\r\n        isAuth: state.auth.isAuth,\r\n        error: state.auth.error\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {login})(Login);"],"sourceRoot":""}