{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/auth-reducer.ts","components/Header/Header.module.css","redux/profile-reducer.ts","assets/images/loader.gif","components/common/Preloader/Preloader.jsx","redux/dialogs-reducer.ts","utils/objects-helpers.js","redux/users-reducer.ts","api/api.js","redux/app-reducer.ts","redux/sidebar-reducer.ts","redux/redux-store.ts","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/hoc/WithSuspense.jsx","App.js","index.tsx"],"names":["module","exports","SET_USERS_DATA","IS_ERROR","GET_CAPTCHA_URL_SUCCESS","initialState","userId","email","login","isAuth","error","show","message","captchaUrl","setAuthUserData","type","payload","getError","getCaptchaUrlSuccess","getUsersData","dispatch","a","authAPI","me","response","data","resultCode","id","password","rememberMe","captcha","getCaptchaUrl","messages","length","logout","securityAPI","url","authReducer","state","action","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","SAVE_PHOTO_SUCCESS","posts","text","likesCount","profile","status","addPostActionCreator","post","updateUserStatus","setProfile","profileAPI","getStatus","setStatus","savePhoto","file","photos","saveProfile","getState","auth","profileReducer","newPost","filter","postId","Preloader","src","preloader","SEND_MESSAGE","dialogs","name","sendMessageCreator","newMessage","dialogsReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","user","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","pageSize","usersCount","currentPage","isFetching","followingInProgress","portionSize","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","isFetch","toggleFollowingProgress","isFollowing","getUsers","usersAPI","count","totalCount","_toggleFollow","apiMethod","actionCreator","follow","bind","unfollow","usersReducer","followed","instance","axios","withCredentials","baseURL","headers","get","then","delete","put","photoFile","formData","FormData","append","INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","rootReducer","combineReducers","profilePage","dialogsPage","sidebar","usersPage","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Header","props","className","styles","header","header__img","alt","loginBlock","onClick","to","HeaderContainer","this","React","Component","connect","Navbar","nav","list","item","active","activeClassName","WithSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","UsersContainer","Login","App","initializeApp","exact","from","path","render","AppContainer","withRouter","Promise","all","AppContainerWrapper","basename","process","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bab491ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3FUYt\",\"list\":\"Navbar_list__2BCrS\",\"item\":\"Navbar_item__2-COX\",\"active\":\"Navbar_active__D7CPA\"};","import {authAPI, securityAPI} from \"../api/api\";\r\n\r\nconst SET_USERS_DATA = 'social/auth/SET_USERS_DATA';\r\nconst IS_ERROR = 'social/auth/IS_ERROR';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'social/auth/GET_CAPTCHA_URL_SUCCESS';\r\n\r\nconst initialState = {\r\n    userId: null as null | number,\r\n    email: null as null | string,\r\n    login: null as null | string,\r\n    isAuth: false as boolean,\r\n    error: {show: false, message: ''} as {show: boolean, message: string},\r\n    captchaUrl: null as null | string\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst authReducer = (state = initialState, action : any): InitialStateType => {\r\n    switch (action.type) {\r\n        case SET_USERS_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:\r\n        {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        case IS_ERROR: {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\ntype SetAuthUserDataPayloadType = {\r\n    userId: number | null\r\n    email: string | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\ntype SetAuthUserDataType = {\r\n    type: typeof SET_USERS_DATA,\r\n    payload: SetAuthUserDataPayloadType\r\n}\r\n\r\ntype GetCaptchaUrlSuccessType = {\r\n    type: typeof GET_CAPTCHA_URL_SUCCESS\r\n    payload: {captchaUrl: string}\r\n}\r\n\r\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean) : SetAuthUserDataType => ({\r\n    type: SET_USERS_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\nexport const getError = (error: Object) => ({type: IS_ERROR, error});\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string): GetCaptchaUrlSuccessType => ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}});\r\n\r\nexport const getUsersData = () => {\r\n    return async (dispatch: any) => {\r\n        const response = await authAPI.me();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            let {id, email, login} = response.data.data\r\n            dispatch(setAuthUserData(id, email, login, true))\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string) => {\r\n    return async (dispatch: any) => {\r\n        const response = await authAPI.login(email, password, rememberMe, captcha);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getUsersData());\r\n            dispatch(getError({show: false, message: ''}));\r\n        } else {\r\n            if (response.data.resultCode === 10) {\r\n                dispatch(getCaptchaUrl());\r\n            }\r\n            dispatch(getError({\r\n                    show: true, message: response.data.messages.length\r\n                    ? response.data.messages[0]\r\n                    : 'Some error'\r\n                }\r\n            ));\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch: any) => {\r\n        const response = await authAPI.logout();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => {\r\n    return async (dispatch: any) => {\r\n        const response = await securityAPI.getCaptchaUrl();\r\n        const captchaUrl = response.data.url;\r\n        dispatch(getCaptchaUrlSuccess(captchaUrl));\r\n\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__15hak\",\"header__img\":\"Header_header__img__1fsC3\",\"loginBlock\":\"Header_loginBlock__3zrbl\"};","import {profileAPI} from \"../api/api\";\r\nimport {PhotosType, PostType, ProfileType} from \"../types/types\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nconst initialState = {\r\n    posts: [\r\n        {id: 1, text: 'Привет', likesCount: 8},\r\n        {id: 2, text: 'Я трейдер, мне 8 лет', likesCount: 13},\r\n        {id: 3, text: 'А я Senior, мне 12 лет', likesCount: 10}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: ''\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            const newPost = {\r\n                id: state.posts.length + 1,\r\n                text: action.post,\r\n                likesCount: 5\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(post => post.id !== action.postId)\r\n            }\r\n            case SAVE_PHOTO_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: {...state.profile, photos: action.photos} as ProfileType\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype AddPostActionCreatorType = { type: typeof ADD_POST, post: string }\r\ntype SetUserProfileType = { type: typeof SET_USER_PROFILE, profile: ProfileType }\r\ntype UpdateUserStatusType = { type: typeof SET_STATUS, status: string }\r\ntype DeletePostType = { type: typeof DELETE_POST, postId: number }\r\ntype SavePhotoSuccessType = { type: typeof SAVE_PHOTO_SUCCESS, photos: PhotosType }\r\n\r\nexport const addPostActionCreator = (post: string): AddPostActionCreatorType => ({type: ADD_POST, post});\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileType => ({type: SET_USER_PROFILE, profile});\r\nexport const updateUserStatus = (status: string): UpdateUserStatusType => ({type: SET_STATUS, status});\r\nexport const deletePost = (postId: number): DeletePostType => ({type: DELETE_POST, postId});\r\nexport const savePhotoSuccess = (photos: PhotosType): SavePhotoSuccessType => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\nexport const setProfile = (userId: number) => async (dispatch: any) => {\r\n    const response = await profileAPI.setProfile(userId);\r\n    dispatch(setUserProfile(response));\r\n}\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: any) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(updateUserStatus(response.data));\r\n}\r\n\r\nexport const setStatus = (status: string) => async (dispatch: any) => {\r\n    const response = await profileAPI.setStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(updateUserStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: any) => async (dispatch: any) => {\r\n    const response = await profileAPI.savePhoto(file);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n}\r\n\r\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n    const response = await profileAPI.saveProfile(profile);\r\n    const userId = getState().auth.userId;\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setProfile(userId));\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n","export default __webpack_public_path__ + \"static/media/loader.47a47a00.gif\";","import React from 'react';\r\nimport preloader from \"../../../assets/images/loader.gif\";\r\n\r\n\r\nfunction Preloader() {\r\n    return (\r\n        <img src={preloader}/>\r\n    );\r\n}\r\n\r\nexport default Preloader;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\ntype DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\ntype MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Pasha'},\r\n        {id: 2, name: 'Kirill'},\r\n        {id: 3, name: 'Dasha'},\r\n        {id: 4, name: 'Viktor'},\r\n        {id: 5, name: 'Misha'},\r\n        {id: 6, name: 'Artyom'},\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'Yes'},\r\n        {id: 3, message: 'some'},\r\n        {id: 4, message: 'node'},\r\n        {id: 5, message: 'GG'},\r\n        {id: 6, message: 'Yo'},\r\n    ] as Array<MessageType>\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst dialogsReducer = (state = initialState, action: any) : InitialStateType => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let newMessage = action.newMessage;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: state.messages.length + 1, message: newMessage}]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype SendMessageCreatorType = {\r\n    type: typeof SEND_MESSAGE\r\n    newMessage: string\r\n}\r\n\r\nexport const sendMessageCreator = (newMessage: string): SendMessageCreatorType => ({\r\n    type: SEND_MESSAGE, newMessage\r\n});\r\n\r\nexport default dialogsReducer;\r\n\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(user => {\r\n        if (user[objPropName] === itemId) {\r\n            return {...user, ...newObjProps};\r\n        }\r\n        return user;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/objects-helpers\";\r\nimport {UserType} from \"../types/types\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_FETCHING = 'TOGGLE_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nconst initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 5,\r\n    usersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [] as Array<number>,\r\n    portionSize: 10\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst usersReducer = (state = initialState, action: Actionstypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: true})\r\n            }\r\n        }\r\n        case UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, 'id', {followed: false})\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                usersCount: action.count\r\n            }\r\n        }\r\n        case TOGGLE_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetch\r\n            }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFollowing\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter((id: number) => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype FollowSuccessType = { type: typeof FOLLOW, userId: number };\r\ntype UnfollowSuccessType = { type: typeof UNFOLLOW, userId: number };\r\ntype SetUsersType = { type: typeof SET_USERS, users: Array<UserType> };\r\ntype SetCurrentPageType = { type: typeof SET_CURRENT_PAGE, currentPage: number };\r\ntype SetTotalCountUsersType = { type: typeof SET_TOTAL_USERS_COUNT, count: number };\r\ntype ToggleIsFetchingType = { type: typeof TOGGLE_FETCHING, isFetch: boolean };\r\ntype ToggleFollowingProgressType = { type: typeof TOGGLE_IS_FOLLOWING_PROGRESS, isFollowing: boolean, userId: number };\r\n\r\ntype Actionstypes = FollowSuccessType |\r\n    UnfollowSuccessType |\r\n    SetUsersType |\r\n    SetCurrentPageType |\r\n    SetTotalCountUsersType |\r\n    ToggleIsFetchingType |\r\n    ToggleFollowingProgressType\r\n\r\nexport const followSuccess = (userId: number): FollowSuccessType => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessType => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users: Array<UserType>): SetUsersType => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageType => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalCountUsers = (count: number): SetTotalCountUsersType => ({type: SET_TOTAL_USERS_COUNT, count});\r\nexport const toggleIsFetching = (isFetch: boolean): ToggleIsFetchingType => ({type: TOGGLE_FETCHING, isFetch});\r\nexport const toggleFollowingProgress = (isFollowing: boolean, userId: any): ToggleFollowingProgressType => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS, isFollowing, userId\r\n});\r\n\r\ntype DispatchType = Dispatch<Actionstypes>\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, Actionstypes>\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number): ThunkType => {\r\n    return async (dispatch, getState) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(currentPage));\r\n\r\n        let response = await usersAPI.getUsers(currentPage, pageSize);\r\n\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(response.items));\r\n        dispatch(setTotalCountUsers(response.totalCount));\r\n    }\r\n}\r\n\r\nconst _toggleFollow = async (dispatch: DispatchType,\r\n                             userId: number,\r\n                             apiMethod: any,\r\n                             actionCreator: (userId: number) => FollowSuccessType | UnfollowSuccessType) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        _toggleFollow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        _toggleFollow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;\r\n","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        'API-KEY': 'baf16d0a-ce87-4c48-afe2-4f6364540e9b'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`).then(response => response.data)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`).then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    setProfile(userId) {\r\n        return instance.get('profile/' + userId).then(response => response.data)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get('profile/status/' + userId)\r\n    },\r\n    setStatus(status) {\r\n        return instance.put('profile/status/', {status: status})\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append('image', photoFile);\r\n        return instance.put('profile/photo/', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put('profile', profile)\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get('auth/me')\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post('auth/login', { email, password, rememberMe, captcha });\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login');\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get('security/get-captcha-url')\r\n    }\r\n}","import {getUsersData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\ntype InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nconst initialState : InitialStateType = {\r\n    initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n\r\ntype SetInitializedSuccessType = {\r\n    type: typeof INITIALIZED_SUCCESS\r\n}\r\n\r\nexport const setInitializedSuccess = () : SetInitializedSuccessType => ({ type: INITIALIZED_SUCCESS })\r\n\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    Promise.all([dispatch(getUsersData())])\r\n        .then(() => {\r\n            dispatch(setInitializedSuccess());\r\n        });\r\n}\r\n\r\nexport default appReducer;\r\n","\r\nconst initialState = {\r\n\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst sidebarReducer = (state = initialState, action: any): InitialStateType => {\r\n    return state;\r\n}\r\n\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunk from 'redux-thunk';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n})\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type AppStateType = ReturnType<RootReducerType>;\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\nexport default store;","import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={styles.header}>\r\n            <img\r\n                className={styles.header__img}\r\n                src=\"https://i.pinimg.com/originals/3f/3d/d9/3f3dd9219f7bb1c9617cf4f154b70383.jpg\"\r\n                alt='HeaderImg'\r\n            />\r\n            <div className={styles.loginBlock}>\r\n                {\r\n                    props.isAuth ?\r\n                       <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                        : <NavLink to={'/login'}> Login </NavLink>\r\n                }\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header\r\n            {...this.props}\r\n        />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport styles from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className={styles.nav}>\r\n            <ul className={styles.list}>\r\n                <li className={`${styles.item} ${styles.active}`}>\r\n                    <NavLink to='/profile' activeClassName={styles.active}>Profile</NavLink>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <NavLink to='/dialogs' activeClassName={styles.active}>Dialogs</NavLink>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <NavLink to='/users' activeClassName={styles.active}>Users</NavLink>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nexport const WithSuspense = Component => {\r\n    return props => {\r\n        return (\r\n            <React.Suspense fallback={<div>Loading..</div>}>\r\n                <Component {...props} />\r\n            </React.Suspense>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter, Route, withRouter, Switch, Redirect} from 'react-router-dom';\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport store from \"./redux/redux-store\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport {WithSuspense} from \"./components/hoc/WithSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst Login = React.lazy(() => import('./components/Login/Login'));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className={'app-wrapper'}>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Switch>\r\n                        <Redirect exact from=\"/\" to=\"/profile\" />\r\n                        <Route path='/dialogs' render={WithSuspense(DialogsContainer)}/>\r\n                        <Route path='/profile/:userId?' render={WithSuspense(ProfileContainer)}/>\r\n                        <Route path='/users' render={WithSuspense(UsersContainer)}/>\r\n                        <Route path='/login' render={WithSuspense(Login)}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        initialized: state.app.initialized\r\n    }\r\n}\r\n\r\nconst AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp})\r\n)(App);\r\n\r\nconst AppContainerWrapper = () => {\r\n    return (\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Provider store={store}>\r\n                <AppContainer/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default AppContainerWrapper;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AppContainerWrapper from './App';\r\n\r\nReactDOM.render(<React.StrictMode>\r\n    <AppContainerWrapper/>\r\n</React.StrictMode>, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}